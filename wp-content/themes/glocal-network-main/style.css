@charset "UTF-8";
/*
Theme Name: Glocal Network
Theme URI: http://underscores.me/
Author: Pea, Glocal
Author URI: http://glocal.coop
Description: A packaged theme for activist and community networks using Wordpress multisite.
Version: 1.0-wpcom
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: glocal-network
Tags:

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.

Glocal Network is based on Underscores http://underscores.me/, (C) 2012-2014 Automattic, Inc.

Resetting and rebuilding styles have been helped along thanks to the fine work of
Eric Meyer http://meyerweb.com/eric/tools/css/reset/index.html
along with Nicolas Gallagher and Jonathan Neal http://necolas.github.com/normalize.css/
and Blueprint http://www.blueprintcss.org/
*/
/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
1.0 Reset
2.0 Typography
3.0 Elements
4.0 Forms
5.0 Navigation
	5.1 Links
	5.2 Menus
6.0 Accessibility
7.0 Alignments
8.0 Clearings
9.0 Widgets
10.0 Content
	10.1 Posts and pages
	10.2 Asides
	10.3 Comments
11.0 Infinite scroll
12.0 Media
	12.1 Captions
	12.2 Galleries
--------------------------------------------------------------*/
/* Bourbon 4.0.2
 * http://bourbon.io
 * Copyright 2011-2014 thoughtbot, inc.
 * MIT License */
/* Neat 1.7.0.pre
 * http://neat.bourbon.io
 * Copyright 2012-2014 thoughtbot, inc.
 * MIT License */
/**
 * Returns a media context (media query / grid context) that can be stored in a variable and passed to `media()` as a single-keyword argument. Media contexts defined using `new-breakpoint` are used by the visual grid, as long as they are defined before importing Neat.
 *
 * @param {List} $query
 *   - A list of media query features and values. Each `$feature` should have a corresponding `$value`. If there is only a single `$value` in `$query`, `$default-feature` is going to be used. The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`). For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).
 *
 * @param {Number (unitless)} $total-columns ($grid-columns)
 *   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.
 *
 * @example scss - Usage
 *   $mobile: new-breakpoint(max-width 480px 4);
 *
 *   .element {
 *     @include media($mobile) {
 *       @include span-columns(4);
 *     }
 *   }
 *
 * @example css - CSS Output
 *   @media screen and (max-width: 480px) {
 *     .element {
 *       display: block;
 *       float: left;
 *       margin-right: 7.42297%;
 *       width: 100%;
 *     }
 *     .element:last-child {
 *       margin-right: 0;
 *     }
 *   }
 */
/**
 * Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with a `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. To learn more about golden-ratio() see [Bourbon docs](http://bourbon.io/docs/#golden-ratio). Set with the `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.
 *
 * @type Number (Unitless)
 */
/**
 * Sets the max-width property of the element that includes `outer-container()`. To learn more about `em()` see [Bourbon docs](http://bourbon.io/docs/#px-to-em). Set with the `!global` flag.
 *
 * @type Number (Unit)
 */
/**
 * When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.
 *
 * @type Bool
 *
 * @example css - CSS Output
 *   * {
 *     -webkit-box-sizing: border-box;
 *     -moz-box-sizing: border-box;
 *     box-sizing: border-box;
 *   }
 */
/**
 * Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.
 *
 * @type String
 */
/**
 * Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.
 *
 * @type String
 */
/**
 * Displays the visual grid when set to true. The overlaid grid may be few pixels off depending on the browser's rendering engine and pixel rounding algorithm. Set with the `!global` flag.
 *
 * @type Bool
 */
/**
 * Sets the visual grid color. Set with `!global` flag.
 *
 * @type Color
 */
/**
 * Sets the `z-index` property of the visual grid. Can be `back` (behind content) or `front` (in front of content). Set with `!global` flag.
 *
 * @type String
 */
/**
 * Sets the opacity property of the visual grid. Set with `!global` flag.
 *
 * @type Number (unitless)
 */
/**
 * Disable all deprecation warnings. Defaults to `false`. Set with a `!global` flag.
 *
 * @type Bool
 */
/* line 2, sass/libs/neat/grid/_box-sizing.scss */
html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/* line 7, sass/libs/neat/grid/_box-sizing.scss */
*, *:before, *:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.
 *
 * @param {List} $query (block)
 *   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).
 *
 *   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.
 *
 *   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.
 *
 * @example scss - Usage
 *   .element {
 *     @include omega;
 *   }
 *
 *   .nth-element {
 *     @include omega(4n);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     margin-right: 0;
 *   }
 *
 *   .nth-element:nth-child(4n) {
 *     margin-right: 0;
 *   }
 *
 *   .nth-element:nth-child(4n+1) {
 *     clear: left;
 *   }
 */
/**
 * Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.
 * Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.
 *
 * @param {Number (unit)} $local-max-width ($max-width)
 *   Max width to be applied to the element. Can be a percentage or a measure.
 *
 * @example scss - Usage
 *   .element {
 *     @include outer-container(100%);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     *zoom: 1;
 *     max-width: 100%;
 *     margin-left: auto;
 *     margin-right: auto;
 *   }
 *
 *   .element:before, .element:after {
 *     content: " ";
 *     display: table;
 *   }
 *
 *   .element:after {
 *     clear: both;
 *   }
 */
/**
 * Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.
 *
 * @param {List} $span
 *   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).
 *
 *   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.
 *
 *   The values can be separated with any string such as `of`, `/`, etc.
 *
 * @param {String} $display (block)
 *   Sets the display property of the element. By default it sets the display propert of the element to `block`.
 *
 *   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.
 *
 *   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.
 *
 * @example scss - Usage
 *   .element {
 *     @include span-columns(6);

 *    .nested-element {
 *      @include span-columns(2 of 6);
 *    }
 *  }
 *
 * @example css - CSS Output
 *   .element {
 *     display: block;
 *     float: left;
 *     margin-right: 2.35765%;
 *     width: 48.82117%;
 *   }
 *
 *   .element:last-child {
 *     margin-right: 0;
 *   }
 *
 *   .element .nested-element {
 *     display: block;
 *     float: left;
 *     margin-right: 4.82916%;
 *     width: 30.11389%;
 *   }
 *
 *   .element .nested-element:last-child {
 *     margin-right: 0;
 *   }
 */
/**
 * Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.
 *
 * @param {String} $display (default)
 *   Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.
 *
 * @param {String} $direction ($default-layout-direction)
 *   Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).
 *
 * @example scss - Usage
 *   .element {
 *     @include row();
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     *zoom: 1;
 *     display: block;
 *   }
 *
 *  .element:before, .element:after {
 *    content: " ";
 *    display: table;
 *  }
 *
 *  .element:after {
 *    clear: both;
 *  }
 */
/**
 * Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.
 *
 * @param {Number (unitless)} $n-columns (1)
 *   Number of columns by which the element shifts.
 *
 * @example scss - Usage
 *   .element {
 *     @include shift(-3);
 *   }
 *
 * @example css - CSS output
 *   .element {
 *     margin-left: -25.58941%;
 *   }
 */
/**
 * Translates an element horizontally by a number of columns, in a specific nesting context.
 *
 * @param {List} $shift
 *   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).
 *
 *   The two values can be separated with any string such as `of`, `/`, etc.
 *
 * @example scss - Usage
 *   .element {
 *     @include shift(-3 of 6);
 *   }
 *
 * @example css - CSS output
 *   .element {
 *     margin-left: -52.41458%;
 *   }
 */
/**
 * Adds padding to the element.
 *
 * @param {List} $padding (flex-gutter())
 *   A list of padding value(s) to use. Passing `default` in the list will result in using the gutter width as a padding value.
 *
 * @example scss - Usage
 *   .element {
 *     @include pad(30px -20px 10px default);
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     padding: 30px -20px 10px 2.35765%;
 *   }
 */
/**
 * Forces the element to fill its parent container.
 *
 * @example scss - Usage
 *   .element {
 *     @include fill-parent;
 *   }
 *
 * @example css - CSS Output
 *   .element {
 *     width: 100%;
 *     -webkit-box-sizing: border-box;
 *     -moz-box-sizing: border-box;
 *     box-sizing: border-box;
 *   }
 */
/**
 * Outputs a media-query block with an optional grid context (the total number of columns used in the grid).
 *
 * @param {List} $query
 *   A list of media query features and values, where each `$feature` should have a corresponding `$value`.
 *   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).
 *
 *   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.
 *
 *   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).
 *
 *
 * @param {Number (unitless)} $total-columns ($grid-columns)
 *   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.
 *
 * @example scss - Usage
 *   .responsive-element {
 *      @include media(769px) {
 *        @include span-columns(6);
 *      }
 *   }
 *
 *  .new-context-element {
 *    @include media(min-width 320px max-width 480px, 6) {
 *      @include span-columns(6);
 *    }
 *  }
 *
 * @example css - CSS Output
 *  @media screen and (min-width: 769px) {
 *    .responsive-element {
 *      display: block;
 *      float: left;
 *      margin-right: 2.35765%;
 *      width: 48.82117%;
 *    }
 *
 *    .responsive-element:last-child {
 *      margin-right: 0;
 *    }
 *  }
 *
 *  @media screen and (min-width: 320px) and (max-width: 480px) {
 *    .new-context-element {
 *      display: block;
 *      float: left;
 *      margin-right: 4.82916%;
 *      width: 100%;
 *    }
 *
 *    .new-context-element:last-child {
 *      margin-right: 0;
 *    }
 *  }
 */
/**
 * Resets the active display property to `block`. Particularly useful when changing the display property in a single row.
 *
 * @example scss - Usage
 *   .element {
 *     @include row(table);
 *     // Context changed to table display
 *   }
 *
 *   @include reset-display;
 *   // Context is reset to block display
 */
/**
 * Resets the active layout direction to the default value set in `$default-layout-direction`. Particularly useful when changing the layout direction in a single row.
 *
 * @example scss - Usage
 *   .element {
 *     @include row($direction: RTL);
 *     // Context changed to right-to-left
 *   }
 *
 *   @include reset-layout-direction;
 *   // Context is reset to left-to-right
 */
/**
 * Resets both the active layout direction and the active display property.
 *
 * @example scss - Usage
 *   .element {
 *     @include row(table, RTL);
 *     // Context changed to table table and right-to-left
 *   }
 *
 *   @include reset-all;
 *   // Context is reset to block display and left-to-right
 */
/**
 * Changes the display property used by other mixins called in the code block argument.
 *
 * @param {String} $display (block)
 *   Display value to be used within the block. Can be `table` or `block`.
 *
 * @example scss
 *   @include display(table) {
 *    .display-table {
 *      @include span-columns(6);
 *     }
 *   }
 *
 * @example css
 *   .display-table {
 *      display: table-cell;
 *      ...
 *   }
 */
/**
 * Changes the direction property used by other mixins called in the code block argument.
 *
 * @param {String} $direction (left-to-right)
 *   Layout direction to be used within the block. Can be `left-to-right` or `right-to-left`.
 *
 * @example scss - Usage
 *   @include direction(right-to-left) {
 *    .right-to-left-block {
 *      @include span-columns(6);
 *     }
 *   }
 *
 * @example css - CSS Output
 *   .right-to-left-block {
 *     float: right;
 *      ...
 *   }
 */
/*--------------------------------------------------------------
1.0 Reset
--------------------------------------------------------------*/
/* line 1, sass/_reset.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, font, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline; }

/* line 19, sass/_reset.scss */
html {
  font-size: 62.5%;
  /* Corrects text resizing oddly in IE6/7 when body font-size is set using em units http://clagnut.com/blog/348/#c790 */
  overflow-y: scroll;
  /* Keeps page centered in all browsers regardless of content height */
  -webkit-text-size-adjust: 100%;
  /* Prevents iOS text size adjust after orientation change, without disabling user zoom */
  -ms-text-size-adjust: 100%;
  /* www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/ */ }

/* line 25, sass/_reset.scss */
*,
*:before,
*:after {
  /* apply a natural box layout model to all elements; see http://www.paulirish.com/2012/box-sizing-border-box-ftw/ */
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/* line 30, sass/_reset.scss */
body {
  background: #fff;
  /* Fallback for when there is no custom background color defined. */ }

/* line 33, sass/_reset.scss */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section {
  display: block; }

/* line 45, sass/_reset.scss */
ol, ul {
  list-style: none; }

/* line 48, sass/_reset.scss */
table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

/* line 52, sass/_reset.scss */
caption, th, td {
  font-weight: normal;
  text-align: left; }

/* line 56, sass/_reset.scss */
blockquote:before, blockquote:after,
q:before, q:after {
  content: ""; }

/* line 60, sass/_reset.scss */
blockquote, q {
  quotes: "" ""; }

/* line 63, sass/_reset.scss */
a:focus {
  outline: thin dotted; }

/* line 66, sass/_reset.scss */
a:hover,
a:active {
  outline: 0; }

/* line 70, sass/_reset.scss */
a img {
  border: 0; }

/*--------------------------------------------------------------
2.0 Typography
--------------------------------------------------------------*/
/* line 1, sass/typography/_typography.scss */
body,
button,
input,
select,
textarea {
  color: #404040;
  font-family: sans-serif;
  font-size: 16px;
  font-size: 1.6rem;
  line-height: 1.5; }

/* line 1, sass/typography/_headings.scss */
h1, h2, h3, h4, h5, h6 {
  clear: both; }

/* line 1, sass/typography/_copy.scss */
p {
  margin-bottom: 1.5em; }

/* line 5, sass/typography/_copy.scss */
b, strong {
  font-weight: bold; }

/* line 9, sass/typography/_copy.scss */
dfn, cite, em, i {
  font-style: italic; }

/* line 13, sass/typography/_copy.scss */
blockquote {
  margin: 0 1.5em; }

/* line 17, sass/typography/_copy.scss */
address {
  margin: 0 0 1.5em; }

/* line 21, sass/typography/_copy.scss */
pre {
  background: #eee;
  font-family: "Courier 10 Pitch", Courier, monospace;
  font-size: 15px;
  font-size: 1.5rem;
  line-height: 1.6;
  margin-bottom: 1.6em;
  max-width: 100%;
  overflow: auto;
  padding: 1.6em; }

/* line 32, sass/typography/_copy.scss */
code, kbd, tt, var {
  font-size: 15px;
  font-size: 1.5rem;
  font-family: Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

/* line 37, sass/typography/_copy.scss */
abbr, acronym {
  border-bottom: 1px dotted #666;
  cursor: help; }

/* line 42, sass/typography/_copy.scss */
mark, ins {
  background: #fff9c0;
  text-decoration: none; }

/* line 47, sass/typography/_copy.scss */
sup,
sub {
  font-size: 75%;
  height: 0;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 56, sass/typography/_copy.scss */
sup {
  bottom: 1ex; }

/* line 60, sass/typography/_copy.scss */
sub {
  top: .5ex; }

/* line 64, sass/typography/_copy.scss */
small {
  font-size: 75%; }

/* line 68, sass/typography/_copy.scss */
big {
  font-size: 125%; }

/*--------------------------------------------------------------
3.0 Elements
--------------------------------------------------------------*/
/* line 1, sass/elements/_elements.scss */
hr {
  background-color: #ccc;
  border: 0;
  height: 1px;
  margin-bottom: 1.5em; }

/* line 1, sass/elements/_lists.scss */
ul, ol {
  margin: 0 0 1.5em 3em; }

/* line 5, sass/elements/_lists.scss */
ul {
  list-style: disc; }

/* line 9, sass/elements/_lists.scss */
ol {
  list-style: decimal; }

/* line 13, sass/elements/_lists.scss */
li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 1.5em; }

/* line 19, sass/elements/_lists.scss */
dt {
  font-weight: bold; }

/* line 23, sass/elements/_lists.scss */
dd {
  margin: 0 1.5em 1.5em; }

/* line 10, sass/elements/_elements.scss */
img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */ }

/* line 15, sass/elements/_elements.scss */
figure {
  margin: 0; }

/* line 1, sass/elements/_tables.scss */
table {
  margin: 0 0 1.5em;
  width: 100%; }

/* line 6, sass/elements/_tables.scss */
th {
  font-weight: bold; }

/*--------------------------------------------------------------
4.0 Forms
--------------------------------------------------------------*/
/* line 1, sass/forms/_forms.scss */
button,
input,
select,
textarea {
  font-size: 100%;
  /* Corrects font size not being inherited in all browsers */
  margin: 0;
  /* Addresses margins set differently in IE6/7, F3/4, S5, Chrome */
  vertical-align: baseline;
  /* Improves appearance and consistency in all browsers */ }

/* line 1, sass/forms/_buttons.scss */
button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  border: 1px solid;
  border-color: #ccc #ccc #bbb;
  background-clip: padding-box;
  /* stops bg color from leaking outside the border: */
  -webkit-border-radius: 3px;
  border-radius: 3px;
  background: #e6e6e6;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.5), inset 0 15px 17px rgba(255, 255, 255, 0.5), inset 0 -5px 12px rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.8);
  cursor: pointer;
  /* Improves usability and consistency of cursor style between image-type 'input' and others */
  -webkit-appearance: button;
  /* Corrects inability to style clickable 'input' types in iOS */
  font-size: 12px;
  font-size: 1.2rem;
  line-height: 1;
  padding: .6em 1em .4em;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.8); }

/* line 19, sass/forms/_buttons.scss */
button:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
input[type="submit"]:hover {
  border-color: #ccc #bbb #aaa;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.8), inset 0 15px 17px rgba(255, 255, 255, 0.8), inset 0 -5px 12px rgba(0, 0, 0, 0.02); }

/* line 27, sass/forms/_buttons.scss */
button:focus,
input[type="button"]:focus,
input[type="reset"]:focus,
input[type="submit"]:focus,
button:active,
input[type="button"]:active,
input[type="reset"]:active,
input[type="submit"]:active {
  border-color: #aaa #bbb #bbb;
  box-shadow: inset 0 -1px 0 rgba(255, 255, 255, 0.5), inset 0 2px 5px rgba(0, 0, 0, 0.15); }

/* line 1, sass/forms/_fields.scss */
input[type="checkbox"],
input[type="radio"] {
  padding: 0;
  /* Addresses excess padding in IE8/9 */ }

/* line 6, sass/forms/_fields.scss */
input[type="search"] {
  -webkit-appearance: textfield;
  /* Addresses appearance set to searchfield in S5, Chrome */
  -webkit-box-sizing: content-box;
  /* Addresses box sizing set to border-box in S5, Chrome (include -moz to future-proof) */
  -moz-box-sizing: content-box;
  box-sizing: content-box; }

/* line 13, sass/forms/_fields.scss */
input[type="search"]::-webkit-search-decoration {
  /* Corrects inner padding displayed oddly in S5, Chrome on OSX */
  -webkit-appearance: none; }

/* line 17, sass/forms/_fields.scss */
button::-moz-focus-inner,
input::-moz-focus-inner {
  /* Corrects inner padding and border displayed oddly in FF3/4 www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/ */
  border: 0;
  padding: 0; }

/* line 23, sass/forms/_fields.scss */
input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
textarea {
  color: #666;
  border: 1px solid #ccc;
  background-clip: padding-box;
  /* stops bg color from leaking outside the border: */
  -webkit-border-radius: 3px;
  border-radius: 3px; }

/* line 34, sass/forms/_fields.scss */
input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
textarea:focus {
  color: #111; }

/* line 43, sass/forms/_fields.scss */
input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"] {
  padding: 3px; }

/* line 51, sass/forms/_fields.scss */
textarea {
  overflow: auto;
  /* Removes default vertical scrollbar in IE6/7/8/9 */
  padding-left: 3px;
  vertical-align: top;
  /* Improves readability and alignment in all browsers */
  width: 100%; }

/*--------------------------------------------------------------
5.0 Navigation
--------------------------------------------------------------*/
/*--------------------------------------------------------------
5.1 Links
--------------------------------------------------------------*/
/* line 1, sass/navigation/_links.scss */
a {
  color: royalblue; }
  /* line 4, sass/navigation/_links.scss */
  a:visited {
    color: purple; }
  /* line 7, sass/navigation/_links.scss */
  a:hover, a:focus, a:active {
    color: midnightblue; }

/*--------------------------------------------------------------
5.2 Menus
--------------------------------------------------------------*/
/* line 1, sass/navigation/_menus.scss */
.main-navigation {
  clear: both;
  display: block;
  float: left;
  width: 100%; }
  /* line 7, sass/navigation/_menus.scss */
  .main-navigation ul {
    list-style: none;
    margin: 0;
    padding-left: 0; }
    /* line 12, sass/navigation/_menus.scss */
    .main-navigation ul ul {
      box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2);
      float: left;
      position: absolute;
      top: 1.5em;
      left: -999em;
      z-index: 99999; }
      /* line 20, sass/navigation/_menus.scss */
      .main-navigation ul ul ul {
        left: -999em;
        top: 0; }
      /* line 26, sass/navigation/_menus.scss */
      .main-navigation ul ul li:hover > ul {
        left: 100%; }
      /* line 31, sass/navigation/_menus.scss */
      .main-navigation ul ul a {
        width: 200px; }
    /* line 42, sass/navigation/_menus.scss */
    .main-navigation ul li:hover > ul {
      left: auto; }
  /* line 46, sass/navigation/_menus.scss */
  .main-navigation li {
    float: left;
    position: relative; }
  /* line 53, sass/navigation/_menus.scss */
  .main-navigation a {
    display: block;
    text-decoration: none; }

/* Small menu */
/* line 65, sass/navigation/_menus.scss */
.menu-toggle {
  display: none; }

@media screen and (max-width: 600px) {
  /* line 70, sass/navigation/_menus.scss */
  .menu-toggle,
  .main-navigation.toggled .nav-menu {
    display: block; }

  /* line 75, sass/navigation/_menus.scss */
  .main-navigation ul {
    display: none; } }
/* line 80, sass/navigation/_menus.scss */
.site-main .comment-navigation,
.site-main .paging-navigation,
.site-main .post-navigation {
  margin: 0 0 1.5em;
  overflow: hidden; }

/* line 87, sass/navigation/_menus.scss */
.comment-navigation .nav-previous,
.paging-navigation .nav-previous,
.post-navigation .nav-previous {
  float: left;
  width: 50%; }

/* line 94, sass/navigation/_menus.scss */
.comment-navigation .nav-next,
.paging-navigation .nav-next,
.post-navigation .nav-next {
  float: right;
  text-align: right;
  width: 50%; }

/*--------------------------------------------------------------
6.0 Accessibility
--------------------------------------------------------------*/
/* Text meant only for screen readers */
/* line 2, sass/modules/_accessibility.scss */
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden; }
  /* line 9, sass/modules/_accessibility.scss */
  .screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
    background-color: #f1f1f1;
    background-clip: padding-box;
    /* stops bg color from leaking outside the border: */
    -webkit-border-radius: 3px;
    border-radius: 3px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    clip: auto !important;
    color: #21759b;
    display: block;
    font-size: 14px;
    font-size: 1.4rem;
    font-weight: bold;
    height: auto;
    left: 5px;
    line-height: normal;
    padding: 15px 23px 14px;
    text-decoration: none;
    top: 5px;
    width: auto;
    z-index: 100000;
    /* Above WP toolbar */ }

/*--------------------------------------------------------------
7.0 Alignments
--------------------------------------------------------------*/
/* line 1, sass/modules/_alignments.scss */
.alignleft {
  display: inline;
  float: left;
  margin-right: 1.5em; }

/* line 7, sass/modules/_alignments.scss */
.alignright {
  display: inline;
  float: right;
  margin-left: 1.5em; }

/* line 13, sass/modules/_alignments.scss */
.aligncenter {
  display: block;
  margin: 0 auto; }

/*--------------------------------------------------------------
8.0 Clearings
--------------------------------------------------------------*/
/* line 1, sass/modules/_clearings.scss */
.clear:before,
.clear:after,
.entry-content:before,
.entry-content:after,
.comment-content:before,
.comment-content:after,
.site-header:before,
.site-header:after,
.site-content:before,
.site-content:after,
.site-footer:before,
.site-footer:after {
  content: "";
  display: table; }

/* line 16, sass/modules/_clearings.scss */
.clear:after,
.entry-content:after,
.comment-content:after,
.site-header:after,
.site-content:after,
.site-footer:after {
  clear: both; }

/*--------------------------------------------------------------
9.0 Widgets
--------------------------------------------------------------*/
/* line 1, sass/site/secondary/_widgets.scss */
.widget {
  margin: 0 0 1.5em;
  /* Make sure select elements fit in widgets */ }
  /* line 5, sass/site/secondary/_widgets.scss */
  .widget select {
    max-width: 100%; }

/* Search widget */
/* line 11, sass/site/secondary/_widgets.scss */
.widget_search .search-submit {
  display: none; }

/*--------------------------------------------------------------
10.0 Content
--------------------------------------------------------------*/
/*--------------------------------------------------------------
10.1 Posts and pages
--------------------------------------------------------------*/
/* line 1, sass/site/primary/_posts-and-pages.scss */
.sticky {
  display: block; }

/* line 5, sass/site/primary/_posts-and-pages.scss */
.hentry {
  margin: 0 0 1.5em; }

/* line 9, sass/site/primary/_posts-and-pages.scss */
.byline,
.updated:not(.published) {
  display: none; }

/* line 14, sass/site/primary/_posts-and-pages.scss */
.single .byline,
.group-blog .byline {
  display: inline; }

/* line 19, sass/site/primary/_posts-and-pages.scss */
.page-content,
.entry-content,
.entry-summary {
  margin: 1.5em 0 0; }

/* line 25, sass/site/primary/_posts-and-pages.scss */
.page-links {
  clear: both;
  margin: 0 0 1.5em; }

/* line 30, sass/site/primary/_posts-and-pages.scss */
.yd_linkware {
  display: none; }

/*--------------------------------------------------------------
10.2 Asides
--------------------------------------------------------------*/
/* line 1, sass/site/primary/_asides.scss */
.blog .format-aside .entry-title,
.archive .format-aside .entry-title {
  display: none; }

/*--------------------------------------------------------------
10.3 Comments
--------------------------------------------------------------*/
/* line 1, sass/site/primary/_comments.scss */
.comment-content a {
  word-wrap: break-word; }

/* line 4, sass/site/primary/_comments.scss */
.bypostauthor {
  display: block; }

/*--------------------------------------------------------------
11.0 Infinite scroll
--------------------------------------------------------------*/
/* Globally hidden elements when Infinite Scroll is supported and in use. */
/* line 2, sass/modules/_infinite-scroll.scss */
.infinite-scroll .paging-navigation,
.infinite-scroll.neverending .site-footer {
  /* Theme Footer (when set to scrolling) */
  display: none; }

/* When Infinite Scroll has reached its end we need to re-display elements that were hidden (via .neverending) before */
/* line 8, sass/modules/_infinite-scroll.scss */
.infinity-end.neverending .site-footer {
  display: block; }

/*--------------------------------------------------------------
12.0 Media
--------------------------------------------------------------*/
/* line 1, sass/media/_media.scss */
.page-content img.wp-smiley,
.entry-content img.wp-smiley,
.comment-content img.wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0; }

/* Make sure embeds and iframes fit their containers */
/* line 11, sass/media/_media.scss */
embed,
iframe,
object {
  max-width: 100%; }

/*--------------------------------------------------------------
12.1 Captions
--------------------------------------------------------------*/
/* line 1, sass/media/_captions.scss */
.wp-caption {
  margin-bottom: 1.5em;
  max-width: 100%; }
  /* line 5, sass/media/_captions.scss */
  .wp-caption img[class*="wp-image-"] {
    display: block;
    margin: 0 auto; }
  /* line 9, sass/media/_captions.scss */
  .wp-caption .wp-caption-text {
    margin: 0.8075em 0; }

/* line 14, sass/media/_captions.scss */
.wp-caption-text {
  text-align: center; }

/*--------------------------------------------------------------
12.2 Galleries
--------------------------------------------------------------*/
/* line 1, sass/media/_galleries.scss */
.gallery {
  margin-bottom: 1.5em; }

/* line 5, sass/media/_galleries.scss */
.gallery-item {
  display: inline-block;
  text-align: center;
  vertical-align: top;
  width: 100%; }

/* line 12, sass/media/_galleries.scss */
.gallery-columns-2 .gallery-item {
  max-width: 50%; }

/* line 16, sass/media/_galleries.scss */
.gallery-columns-3 .gallery-item {
  max-width: 33.33%; }

/* line 20, sass/media/_galleries.scss */
.gallery-columns-4 .gallery-item {
  max-width: 25%; }

/* line 24, sass/media/_galleries.scss */
.gallery-columns-5 .gallery-item {
  max-width: 20%; }

/* line 28, sass/media/_galleries.scss */
.gallery-columns-6 .gallery-item {
  max-width: 16.66%; }

/* line 32, sass/media/_galleries.scss */
.gallery-columns-7 .gallery-item {
  max-width: 14.28%; }

/* line 36, sass/media/_galleries.scss */
.gallery-columns-8 .gallery-item {
  max-width: 12.5%; }

/* line 40, sass/media/_galleries.scss */
.gallery-columns-9 .gallery-item {
  max-width: 11.11%; }

/* line 44, sass/media/_galleries.scss */
.gallery-caption {
  display: block; }

/*# sourceMappingURL=style.css.map */
